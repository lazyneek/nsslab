Q1. To implement key generation algorithm in Data Encryption Standards (DES) algorithm.

Code:
#include <bits/stdc++.h> #include <string>
using namespace std;

void shift_left_once(vector <string> &key_chunk){ for(int i = 0; i < 27; i++){
swap(key_chunk[i],key_chunk[i+1]);} }
void shift_left_twice(vector <string> &key_chunk){ for(int i = 0; i < 27; i++){
swap(key_chunk[i],key_chunk[i+1]);} for(int i = 0; i < 27; i++){
swap(key_chunk[i],key_chunk[i+1]); } } void generate_keys(vector<string>&key){
int pc1[56] = {
57,49,41,33,25,17,9, 1,58,50,42,34,26,18, 10,2,59,51,43,35,27, 19,11,3,60,52,44,36,

63,55,47,39,31,23,15, 7,62,54,46,38,30,22, 14,6,61,53,45,37,29, 21,13,5,28,20,12,4 };
int pc2[48] = {
14,17,11,24,1,5, 3,28,15,6,21,10, 23,19,12,4,26,8, 16,7,27,20,13,2,
41,52,31,37,47,55, 30,40,51,45,33,48, 44,49,39,56,34,53, 46,42,50,36,29,32 };
vector<string> perm_key;
for(int i = 0; i < 56; i++){ perm_key.push_back(key[pc1[i]-1]) ; } cout<<"Perm Key: ";
for(int i = 0; i < 56; i++){ cout<<perm_key[i]<<" "; } cout<<endl; vector<string>left,right;
for(int i=0;i<28;i++){ left.push_back(perm_key[i]); right.push_back(perm_key[i+28]);}
for(int i=0; i<16; i++){
if(i == 0 || i == 1 || i==8 || i==15 ){shift_left_once(left);
shift_left_once(right);}else{
shift_left_twice(left); shift_left_twice(right);}
cout<<"left shift "<<i+1<<": ";
for(int j=0;j<28;j++){cout<<left[j]<<" ";}cout<<endl; cout<<"right shift "<<i+1<<": ";
for(int j=0;j<28;j++){cout<<right[j]<<" ";}cout<<endl; vector<string>combined;
for(int j=0;j<28;j++){combined.push_back(left[j]);}
for(int j=0;j<28;j++){ combined.push_back(right[j]);}
vector<string>round_key;
for(int j = 0; j < 48; j++){ round_key.push_back(combined[pc2[j]-1]); } cout<<"Key "<<i+1<<": ";
for(int j=0;j<48;j++){cout<<round_key[j]<<" ";	} cout<<endl;
}
}

int
main(){ vector<string>key={"1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","1
7","18","19","20","21","22","23","24","24","25","26","27","28","29","30","31","32","33","34","35","3
 
6","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","5
6","57","58","59","60","61","62","63","64"};
generate_keys(key);
}
